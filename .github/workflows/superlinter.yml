name: Super Linter Workflow
# This workflow runs the Super Linter to check code quality and style.
# It validates C and Python code, ensuring adherence to coding standards.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Super-Linter
        uses: github/super-linter@v6
        env:
          ############################################
          # Core
          ############################################
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BRANCH: main

          ############################################
          # We want ONLY C and Python
          ############################################
          VALIDATE_ALL_CODEBASE: false   # <-- everything off by default
          VALIDATE_C            : true   # clang-format (and cpplint if enabled)
          VALIDATE_CLANG_FORMAT : true   # keep on; uses .clang-format below
          VALIDATE_PYTHON       : true   # runs Black, Ruff, etc.

          ############################################
          # Optional: narrow Python linters
          # VALIDATE_PYTHON_BLACK : true
          # VALIDATE_PYTHON_ISORT : true
          # VALIDATE_PYTHON_FLAKE8: false
          # VALIDATE_PYTHON_PYLINT: false
          # VALIDATE_PYTHON_MYPY  : false
          ############################################

          ############################################
          # clang-format must respect your style file
          ############################################
          CLANG_FORMAT_STYLE: file

          ############################################
          # Skip Unity test harness
          ############################################
          FILTER_REGEX_EXCLUDE: '^.*/Unity/.*$'
